{"ast":null,"code":"module.exports = authenticationPlugin;\n\nconst {\n  createTokenAuth\n} = require(\"@octokit/auth-token\");\n\nconst {\n  Deprecation\n} = require(\"deprecation\");\n\nconst once = require(\"once\");\n\nconst beforeRequest = require(\"./before-request\");\n\nconst requestError = require(\"./request-error\");\n\nconst validate = require(\"./validate\");\n\nconst withAuthorizationPrefix = require(\"./with-authorization-prefix\");\n\nconst deprecateAuthBasic = once((log, deprecation) => log.warn(deprecation));\nconst deprecateAuthObject = once((log, deprecation) => log.warn(deprecation));\n\nfunction authenticationPlugin(octokit, options) {\n  // If `options.authStrategy` is set then use it and pass in `options.auth`\n  if (options.authStrategy) {\n    const auth = options.authStrategy(options.auth);\n    octokit.hook.wrap(\"request\", auth.hook);\n    octokit.auth = auth;\n    return;\n  } // If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n  // is unauthenticated. The `octokit.auth()` method is a no-op and no request hook is registred.\n\n\n  if (!options.auth) {\n    octokit.auth = () => Promise.resolve({\n      type: \"unauthenticated\"\n    });\n\n    return;\n  }\n\n  const isBasicAuthString = typeof options.auth === \"string\" && /^basic/.test(withAuthorizationPrefix(options.auth)); // If only `options.auth` is set to a string, use the default token authentication strategy.\n\n  if (typeof options.auth === \"string\" && !isBasicAuthString) {\n    const auth = createTokenAuth(options.auth);\n    octokit.hook.wrap(\"request\", auth.hook);\n    octokit.auth = auth;\n    return;\n  } // Otherwise log a deprecation message\n\n\n  const [deprecationMethod, deprecationMessapge] = isBasicAuthString ? [deprecateAuthBasic, 'Setting the \"new Octokit({ auth })\" option to a Basic Auth string is deprecated. Use https://github.com/octokit/auth-basic.js instead. See (https://octokit.github.io/rest.js/#authentication)'] : [deprecateAuthObject, 'Setting the \"new Octokit({ auth })\" option to an object without also setting the \"authStrategy\" option is deprecated and will be removed in v17. See (https://octokit.github.io/rest.js/#authentication)'];\n  deprecationMethod(octokit.log, new Deprecation(\"[@octokit/rest] \" + deprecationMessapge));\n\n  octokit.auth = () => Promise.resolve({\n    type: \"deprecated\",\n    message: deprecationMessapge\n  });\n\n  validate(options.auth);\n  const state = {\n    octokit,\n    auth: options.auth\n  };\n  octokit.hook.before(\"request\", beforeRequest.bind(null, state));\n  octokit.hook.error(\"request\", requestError.bind(null, state));\n}","map":null,"metadata":{},"sourceType":"script"}