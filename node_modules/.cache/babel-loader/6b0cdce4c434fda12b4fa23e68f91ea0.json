{"ast":null,"code":"module.exports = getPage;\n\nconst deprecate = require('./deprecate');\n\nconst getPageLinks = require('./get-page-links');\n\nconst HttpError = require('./http-error');\n\nfunction getPage(octokit, link, which, headers) {\n  deprecate(`octokit.get${which.charAt(0).toUpperCase() + which.slice(1)}Page() â€“ You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);\n  const url = getPageLinks(link)[which];\n\n  if (!url) {\n    const urlError = new HttpError(`No ${which} page found`, 404);\n    return Promise.reject(urlError);\n  }\n\n  const requestOptions = {\n    url,\n    headers: applyAcceptHeader(link, headers)\n  };\n  const promise = octokit.request(requestOptions);\n  return promise;\n}\n\nfunction applyAcceptHeader(res, headers) {\n  const previous = res.headers && res.headers['x-github-media-type'];\n\n  if (!previous || headers && headers.accept) {\n    return headers;\n  }\n\n  headers = headers || {};\n  headers.accept = 'application/vnd.' + previous.replace('; param=', '.').replace('; format=', '+');\n  return headers;\n}","map":null,"metadata":{},"sourceType":"script"}